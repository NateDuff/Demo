trigger:
- main
- development
- feature*

pool:
  vmImage: ubuntu-20.04

variables:
  major: 1
  minor: 0

stages:
  - stage: Build
    jobs:
      - job: buildApp
        displayName: Build Application
        steps:
          - powershell: | 
              Write-Host "Build application step"
            displayName: Run Build Application Script

  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    - stage: Promotion
      jobs:
        - job: promotion
          displayName: Release Promotion
          variables:
            patch: $[counter(variables['build.sourcebranchname'], 0)]
          steps:
            - checkout: self

            - powershell: | 
                Write-Host "Stage promo"

                git checkout $(Build.SourceBranchName)

                git clone --mirror https://$env:SYSTEM_ACCESSTOKEN@dev.azure.com/NateDuff/Duff%20Blog/_git/Demo .

                git remote add GHorigin https://github.com/NateDuff/Demo.git

                git push --mirror https://$(GHPAT)@github.com/NateDuff/Demo.git
              displayName: Promotion Script
              env:
                SYSTEM_ACCESSTOKEN: $(System.AccessToken)
            
            - powershell: |
                Write-Host "Updating Build Number"
                Write-Host "##vso[build.updatebuildnumber]v$(major).$(minor).$(patch)"

                Write-Host "Pulling Git Tags"
                $tags = git ls-remote --tags --sort=committerdate -q https://$(GHPAT)@github.com/NateDuff/Demo.git | foreach {$_.Substring($_.IndexOf("/v") + 1)}
                $tags = $tags -join ", "
                Write-Host "##vso[task.setvariable variable=tags;isoutput=true]$tags"
                Write-Host "Tags: $tags"
            
            - task: GitHubRelease@1  
              displayName: Create GitHub Release  
              inputs:  
                gitHubConnection: MyGitHubServiceConnection  
                repositoryName: 'NateDuff/Demo'
                action: 'create'
                tagSource: userSpecifiedTag  
                tag: '$(Build.BuildNumber)'
                title: '$(Build.BuildNumber)'  
                releaseNotesFilePath: './releaseNotes.md'
                assets: '**/*.md'  
                addChangeLog: false
                ${{ if eq(variables.major, 0) }}:
                  isPreRelease: true

            - powershell: |
                Write-Host "Re-Publishing Tags (TODO: Figure this out)"
                