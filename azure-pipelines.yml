trigger:
- main
- development
- feature*

pool:
  vmImage: 'ubuntu-20.04'

variables:
   major: 1
   minor: 1

stages:
  - stage: Build
    jobs:
      - job: buildApp
        displayName: Build Application
        steps:
          - powershell: | 
              Write-Host "Build application step"
            displayName: Run Build Application Script

  - stage: Promotion
    jobs:
      - job: promotion
        displayName: Release Promotion
        variables:
          patch: $[counter(variables['build.sourcebranchname'], 0)]
        steps:
          - checkout: self
            path: s/Source

          - powershell: | 
              Write-Host "Stage promo"

              git checkout $(Build.SourceBranchName)

              git clone --mirror https://$env:SYSTEM_ACCESSTOKEN@dev.azure.com/NateDuff/Duff%20Blog/_git/Demo .

              git remote add GHorigin https://github.com/NateDuff/Demo.git

              git push --mirror https://$(GHPAT)@github.com/NateDuff/Demo.git
            displayName: Promotion Script
            workingDirectory: Source
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
            
          - checkout: Demo
            path: s/Demo

          - script: curl https://github.com/NateDuff/Demo/releases.atom

          - pwsh: |
              $data = IRM https://$(GHPAT)@github.com/NateDuff/Demo/releases.atom -UseBasicParsing
              
              $data | select * 

              Write-Host "Data: $data"

              $tags = $data.title

              Write-Host "Tags: $tags"
              
              $tags = $tags -join ","
              
              Write-Host "##vso[task.setvariable variable=tags;]$tags"
              Write-Host "Tags: $tags"
            workingDirectory: Demo
            displayName: Get Latest Tags
          
          - powershell: |
              Write-Host "##vso[build.updatebuildnumber]v$(major).$(minor).$(patch)"
          
          - task: GitHubRelease@1  
            displayName: Create GitHub Release  
            inputs:  
              gitHubConnection: MyGitHubServiceConnection  
              repositoryName: 'NateDuff/Demo'
              tagSource: userSpecifiedTag  
              tag: '$(Build.BuildNumber),$(tags)'
              title: '$(Build.BuildNumber)'  
              releaseNotesFilePath: './Source/releaseNotes.md'
              assets: '**/*.md'  
              addChangeLog: false
