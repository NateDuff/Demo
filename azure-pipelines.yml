trigger:
- main
- development
- feature*

pool:
  vmImage: ubuntu-20.04

variables:
  major: 1
  minor: 0

stages:
  - stage: Build
    jobs:
      - job: buildApp
        displayName: Build Application
        steps:
          - powershell: | 
              Write-Host "Build application step"
            displayName: Run Build Application Script

  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    - stage: Promotion
      jobs:
        - job: promotion
          displayName: Release Promotion
          variables:
            patch: $[counter(variables['Build.SourceBranchName'], 0)]
          steps:
            - checkout: self

            - powershell: | 
                Write-Host "Stage promo"

                git checkout $(Build.SourceBranchName)

                git clone --mirror https://$env:SYSTEM_ACCESSTOKEN@dev.azure.com/NateDuff/Duff%20Blog/_git/Demo .

                git remote add GHorigin https://github.com/NateDuff/Demo.git

                git push --all https://$(GHPAT)@github.com/NateDuff/Demo.git
              displayName: Run Promotion Script
              env:
                SYSTEM_ACCESSTOKEN: $(System.AccessToken)
            
            - powershell: |
                Write-Host "##vso[build.updatebuildnumber]v$(major).$(minor).$(patch)"
              displayName: Run Update Build Number Script

            - powershell: |
                Write-Host "Update local release notes with work items"
                $enhancements = @{'id' = 28; 'title' = 'User Story 1'}
                $bugs = @{'id' = 30; 'title' = 'Bug 1'}

                $releaseNotesPath = "releaseNotes.md"
                $content = Get-Content $releaseNotesPath

                ## User Stories
                $content = $content += "## Enhancements:"
                $content = $content += ""

                if ($enhancements) {
                  foreach ($enhancement in $enhancements) {
                    $content = $content += "* [#$($enhancement.id):](https://dev.azure.com/NateDuff/Terraform/_workitems/edit/$($enhancement.id))$($enhancement.title)"
                  }
                } else {
                  $content = $content += "* None"
                }

                ## Bugs
                $content = $content += ""
                $content = $content += "## Fixes:"
                $content = $content += ""

                if ($fixes) {
                  foreach ($fix in $fixes) {
                    $content = $content += "* [#$($fix.id):](https://dev.azure.com/NateDuff/Terraform/_workitems/edit/$($fix.id))$($fix.title)"
                  }
                } else {
                  $content = $content += "* None"
                }

                Set-Content -Path $releaseNotesPath -Value $content -Verbose
              displayName: Run Update Release Notes Script
            
            - task: GitHubRelease@1  
              displayName: Create GitHub Release  
              inputs:  
                gitHubConnection: MyGitHubServiceConnection  
                repositoryName: 'NateDuff/Demo'
                action: 'create'
                tagSource: userSpecifiedTag  
                tag: '$(Build.BuildNumber)'
                title: '$(Build.BuildNumber)'  
                releaseNotesFilePath: './releaseNotes.md'
                assets: '**/*.md'  
                addChangeLog: false
                ${{ if eq(variables.major, 0) }}:
                  isPreRelease: true
                